generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String        @id @default(cuid())
  walletAddress String        @unique
  sites         Site[]
  transactions  Transaction[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Site {
  id                 String @id @default(cuid())
  subdomain          String @unique
  description        String
  owner              User   @relation(fields: [ownerWalletAddress], references: [walletAddress])
  ownerWalletAddress String
  name               String
  logoUrl            String

  // Common Fields (Used by 90%+ sites)
  tokenomics Json @default("{}")
  socials    Json @default("{}")

  // Template System
  templateId   String @default("0")
  templateData Json   @default("{}") // Firestore-style freeform

  // Payment Reference (ONE SITE CAN HAVE MULTIPLE TRANSACTIONS NOW)
  transactions Transaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([subdomain])
  @@index([ownerWalletAddress])
  @@index([templateId])
}

model Transaction {
  id                String   @id @default(cuid())
  user              User     @relation(fields: [userWalletAddress], references: [walletAddress])
  userWalletAddress String
  site              Site?    @relation(fields: [siteId], references: [id])
  siteId            String?
  amount            Float
  txSignature       String   @unique // Solana transaction signature
  status            String // "pending", "confirmed", "failed"
  message           String? // Optional message for the transaction
  createdAt         DateTime @default(now())

  @@index([txSignature])
  @@index([userWalletAddress])
}
